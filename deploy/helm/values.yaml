image:
  repository: tchiotludo/kafkahq
  tag: latest
  annotations: {}
    #prometheus.io/scrape: 'true'
    #prometheus.io/port: '8080'
    #prometheus.io/path: '/metrics'
  extraEnv: []
  ## You can put directly your configuration here...
  # - name: KAFKAHQ_CONFIGURATION
  #   value: |
  #       kafkahq:
  #         connections:
  #           docker-kafka-server:
  #             properties:
  #               bootstrap.servers: "kafka:9092"


## Or you can also use configmap for the configuration...
configuration: |
  kafkahq:
    server:
      access-log: 
        enabled: false 
        name: org.kafkahq.log.access

##... and secret for connection information
connections: |
  kafkahq:
    connections:
      my-cluster-plain-text:
        properties:
          bootstrap.servers: "kafka:9092"
        schema-registry:
          url: "http://schema-registry:8085"
          basic-auth-username: basic-auth-user
          basic-auth-password: basic-auth-pass
        connect:
          url: "http://connect:8083"
          basic-auth-username: basic-auth-user
          basic-auth-password: basic-auth-pass

# Any extra volumes to define for the pod (like keystore/truststore)
extraVolumes: []
# Any extra volume mounts to define for the kafkaHQ container
extraVolumeMounts: []

service:
  enabled: true
  type: ClusterIP
  port: 80
  annotations:
    #cloud.google.com/load-balancer-type: "Internal"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  paths: []
  hosts:
    - kafkahq.demo.com
  tls: []
  #  - secretName: kafkahq-tls
  #    hosts:
  #      - kafkahq.demo.com

resources: {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
